import{_ as i,c as s,b as a,o as t}from"./app-DBuNPd16.js";const n="/Workflow/assets/6a664307563c3775cb5c78cd1f3fbc13-Wgxy6NrA.png",o={};function r(h,e){return t(),s("div",null,e[0]||(e[0]=[a('<h1 id="生成文档网站-零配置极简版" tabindex="-1"><a class="header-anchor" href="#生成文档网站-零配置极简版"><span>生成文档网站 (零配置极简版)</span></a></h1><p>核心: 使用 <a href="https://github.com/LincZero/LincZero.github.io" target="_blank" rel="noopener noreferrer">LincZero.github.io</a> 仓库 (扩展于 <a href="https://theme-hope.vuejs.press/" target="_blank" rel="noopener noreferrer">VuePress Theme Hope</a>) 的单工具流文件构建系统</p><h2 id="构建方法" tabindex="-1"><a class="header-anchor" href="#构建方法"><span>构建方法</span></a></h2><h3 id="两步完成你的文档网站" tabindex="-1"><a class="header-anchor" href="#两步完成你的文档网站"><span>两步完成你的文档网站</span></a></h3><ol><li>复制 .github 文件到你的项目根目录上 (主要使用 <code>.github/workflows/static.yml</code>)。此时commit后就会自动构建啦，可能需要稍等一段时间 (在顶部栏中的actions可以看到进度)，等待构建完成后进行下一步。</li><li>github的项目页中，以此选择：setting &gt; page &gt; 将 <code>Source</code> 设为 <code>Deploy from a branch</code>，将 <code>Branch</code> 设置为 <code>gh-pages</code>，如下图所示。当启用page后，你就可以通过该图中上面给出的链接来访问你的网站了！</li></ol><p><img src="'+n+`" alt="alt text" loading="lazy"></p><h3 id="可选-代理库" tabindex="-1"><a class="header-anchor" href="#可选-代理库"><span>可选：代理库</span></a></h3><p>可选方案：以上方案实现了构建库与笔记库分离，但依然需要往笔记库添加工作流文件。</p><p>如果你无法修改笔记库文件，你可以使用另一个方案：建立一个代理仓库。</p><p>该仓库中除了需要添加前面说的工作流文件外，还需要往添加一个 <code>agency</code> 文件，并将其第一行修改成对应笔记库的克隆地址 (格式为 <code>https://... .git</code>)。</p><p>这样也可以将目标文档库编译成静态文档网站。</p><h3 id="可选-项目与文档混合的文档库" tabindex="-1"><a class="header-anchor" href="#可选-项目与文档混合的文档库"><span>可选：项目与文档混合的文档库</span></a></h3><p>可选方案：如果你的笔记库不是纯粹的笔记，而是 &quot;项目+文档&quot; 的形式。</p><p>也可以，你的文档部分需要在 <code>docs</code> 文件夹里，其他项目部分在不要放这个文件夹里，就可以了。</p><h3 id="前面两个可选方案的原理" tabindex="-1"><a class="header-anchor" href="#前面两个可选方案的原理"><span>前面两个可选方案的原理</span></a></h3><ul><li>如果文档中有 <code>agency</code> 文件：会选择 <code>agency</code> 文件的第一行为仓库地址 (格式为 <code>https://... .git</code>)，否则选择当前仓库为文档库。所以你除了可以在原仓库的基础上新增工作流，也可以创建一个代理仓库用于生成文档而不必修改原仓库。</li><li>如果文档中有 <code>docs</code> 文件夹：会选择 <code>docs</code> 文件夹为文档库，否则选择整个仓库内容为文档库。所以你的仓库是纯粹的文档库或是带有文档的项目，都可以用。</li></ul><h2 id="faq-常见问题" tabindex="-1"><a class="header-anchor" href="#faq-常见问题"><span>FAQ (常见问题)</span></a></h2><p>如果有问题在这里或在issue中进行搜索，如果无法解决，可以创建一个issue提问</p><ul><li>报错：<div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">/usr/bin/git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> worktree</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> remove</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github-pages-deploy-action-temp-deployment-folder</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> --force</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Error:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> deploy</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> step</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> encountered</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> an</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> error:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> The</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> process</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;/usr/bin/git&#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failed</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> with</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> exit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> code</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 128</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ❌</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Notice:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> Deployment</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> failed!</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ❌</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>这可能是因为Action没有开启可写权限 (一般不需要，好像个别情况才要)。在 项目仓库页 &gt; 工具栏的设置 &gt; Action &gt; 拉到下面，有一个选项是让你的工作流可写<br> （如果在Github组织中，需要在组织设置中而非项目仓库页的设置中，进行设置）</li><li>为什么我在第二步中没看到 <code>gh-pages</code> 分支？<br> 需要等待构建完成（在顶部栏中的actions可以看到进度，绿色为构建成功，黄色正在构建，红色为构建失败）</li><li>为什么我在setting中没有看到 page 选项？<br> page选项需要是 yourUserName.github.io 的仓库地址或者 organization 内的项目，才有page选项。如果没有，要么将你的仓库位置修改成这些允许有page的位置，要么使用另一套方案（详情搜issue：分离文档仓库与构建系统仓库）</li><li>报错说分支不对/你的主分支不是main？<br> 修改yml文件，将里面的分支 <code>main</code> 修改为你现在的分支名即可</li><li>什么时候会自动更新内容？<br> 正常commit后，会自动进行文档构建，构建结束后就会自动更新网站内容</li><li>如何使用非github.io部署？<br> 略，提issue，有人问我再回</li><li>我没有在这里找到我的问题？<br> 在issue中搜索看是否有人问过相同的问题，看是否能解决。若没有，则提issue</li></ul>`,19)]))}const p=i(o,[["render",r]]),c=JSON.parse('{"path":"/","title":"生成文档网站 (零配置极简版)","lang":"zh-CN","frontmatter":{"description":"生成文档网站 (零配置极简版) 核心: 使用 LincZero.github.io 仓库 (扩展于 VuePress Theme Hope) 的单工具流文件构建系统 构建方法 两步完成你的文档网站 复制 .github 文件到你的项目根目录上 (主要使用 .github/workflows/static.yml)。此时commit后就会自动构建啦，可能...","head":[["meta",{"property":"og:url","content":"https://LincDocs.github.io/Workflow/"}],["meta",{"property":"og:site_name","content":"Workflow"}],["meta",{"property":"og:title","content":"生成文档网站 (零配置极简版)"}],["meta",{"property":"og:description","content":"生成文档网站 (零配置极简版) 核心: 使用 LincZero.github.io 仓库 (扩展于 VuePress Theme Hope) 的单工具流文件构建系统 构建方法 两步完成你的文档网站 复制 .github 文件到你的项目根目录上 (主要使用 .github/workflows/static.yml)。此时commit后就会自动构建啦，可能..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-04-19T10:40:48.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-19T10:40:48.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"生成文档网站 (零配置极简版)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-19T10:40:48.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"LincDocs\\",\\"url\\":\\"https://github.com/LincDocs/Workflow/\\"}]}"]]},"git":{"createdTime":1745059248000,"updatedTime":1745059248000,"contributors":[{"name":"Linc","username":"Linc","email":"762699299@qq.com","commits":1,"url":"https://github.com/Linc"}]},"readingTime":{"minutes":3.36,"words":1009},"filePathRelative":"README.md","localizedDate":"2025年4月19日","excerpt":"\\n<p>核心: 使用 <a href=\\"https://github.com/LincZero/LincZero.github.io\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">LincZero.github.io</a> 仓库 (扩展于 <a href=\\"https://theme-hope.vuejs.press/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">VuePress Theme Hope</a>) 的单工具流文件构建系统</p>\\n<h2>构建方法</h2>\\n<h3>两步完成你的文档网站</h3>\\n","autoDesc":true,"bioChainData":{"outlink":[],"backlink":[],"localMap":{"nodes":[{"id":"README.md","value":{"title":"README","path":"README.md","outlink":[],"backlink":[]}}],"links":[]}}}');export{p as comp,c as data};
